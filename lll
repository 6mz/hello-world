debug备忘录
1.查看手机是否连接，在cmd中使用adb shell
2.####pull windows批处理文档，把文件从手机读出来

@echo on
set dst_dir=D:\DATA\1126
::adb pull /sdcard/DCIM/Camera %dst_dir%\picture
::adb pull /data/log/ %dst_dir%\log
::adb pull /data/vendor/log/isp-log/ %dst_dir%\log
::adb pull /data/tombstones/ %dst_dir%\log\tombstones
::adb pull /data/img %dst_dir%\yuv
adb pull /data/vendor/camera/img %dst_dir%\yuv
::adb pull /odm/etc/camera/opticalzoom/imx380/ %dst_dir%\imx380_oz_xml
::adb pull /odm/etc/camera/opticalzoom/imx600/ %dst_dir%\imx600_oz_xml
::adb pull /odm/etc/camera/configeffect/opticalzoom/imx380/ %dst_dir%\imx380_isp_xml
::adb pull /odm/etc/camera/configeffect/opticalzoom/imx600/ %dst_dir%\imx600_isp_xml
::adb pull system/vendor/firmware/ %dst_dir%\firmware
pause

3.####divide。py########把文件进行分文件夹###########33
# -*- coding: utf-8 -*-
import os
import datetime
import shutil

path = r'D:\img\RAW'
folder_start_number = 2181
jpg_list =[file for file in os.listdir(path) if file[-3:]=='jpg']
jpg_list.sort()

IMX386DUALHYBIRD_list =[file for file in os.listdir(path) if file[0:16]=='IMX386DUALHYBIRD']
IMX386DUALHYBIRD_list.sort()

def checkpath(path):
    if not os.path.exists(path):
        os.mkdir(path)

def get_time(list):
    time_list=[]
    for file in list:
        time_list.append(file[4:19])
    return(time_list)

def get_reprotime(list):
    time_list=[]
    for file in list:
        time_list.append(file[40:55])
    return(time_list)

def get_imxtime(list):
    time_list=[]
    for file in list:
        time_list.append(file[17:32])
    return(time_list)

def move(list,folder,str_t,path):
    if list == IMX386DUALHYBIRD_list:
        for i in range(len(get_imxtime(list))):
            if (list)[i] is None:
                continue
            if get_imxtime(list)[i] in str_t:
                #print()
                src = path +'\\'+ list[i]
                dst = path +'\\'+ str(folder)
                checkpath(dst)
                shutil.move(src, dst)
            else:
                pass
    

def divide(path,IMX386DUALHYBIRD_list):
    folder = folder_start_number
    #flag = 0 
    for j in range(len(get_time(IMX386DUALHYBIRD_list))):
        
        #if flag <= 4:
            #flag += 1

        str_t = []
        str_t.append(get_time(IMX386DUALHYBIRD_list)[j])
        date_t = datetime.datetime.strptime(get_time(IMX386DUALHYBIRD_list)[j], "%Y%d_%S")
        for x in range(0,3):
            tem_t = date_t + datetime.timedelta(seconds=x)
            str_t.append(datetime.datetime.strftime(tem_t, "%Y%m%d_%H%M%S"))#%Y%m%d_%H%M%S
        move(IMX386DUALHYBIRD_list, folder, str_t, path)
        
        src = path +'\\'+IMX386DUALHYBIRD_list[j]
        dst = path +'\\'+ str(folder)
        checkpath(dst)
        shutil.move(src,dst)
            #print flag
        #if flag == 4:
            #flag = 0
        folder += 1
        
    print('move list success !')

def re_iso(list,time):
    for file in list:
        if file[19:34] in time:

            iso = file.split('_')[9]
            expo = file.split('_')[7]
            return (iso,expo)
    return (0,0)
        #else:
            #return (0,0)

def rename(path):
    for dir in os.listdir(path):
        if dir.isdigit():
            dir_path = path +'\\'+ dir
            #dir_path = path 
            yuv_list = [file for file in os.listdir(dir_path) if file[-3:] == 'yuv']
            info_list = [file for file in os.listdir(dir_path) if file[-4:] == 'info']

            for yuv in yuv_list:

                yuv_time = yuv[40:61]
                yuv_time1 = yuv[40:55]
                yuv_w = yuv.split('_')[2][2:6]
                yuv_h = yuv.split('_')[3][2:6]
                yuv_s = yuv.split('_')[4][2:6]
                time =[]
                print(yuv_w)
                time.append(yuv_time1)
                s_t = datetime.datetime.strptime(yuv_time1, "%Y%m%d_%H%M%S")
                r_t = s_t + datetime.timedelta(seconds=1)
                time.append(datetime.datetime.strftime(r_t, "%Y%m%d_%H%M%S"))
                iso,expo=re_iso(info_list,time)
                if iso != 0 and expo != 0:
                    #print('dir+yuv:', dir, yuv)
                    os.rename(dir_path +'\\'+ yuv,dir_path+'\\'+'opticalzoomdsp_'+yuv_time+'_bufindex_0_size_'+yuv_w+'x'+yuv_h+'_stride_'+yuv_s+'_iso_'+iso+'_gain_'+str(int(round(int(iso)*5.12)))+'_expo_'+expo+'_raw_'+yuv_w+'x'+yuv_h+'.yuv')

def check(path):
    for dir in os.listdir(path):
        if dir.isdigit():     #folder num
            dir_path = path +'\\'+ dir

            yuv_list = [file for file in os.listdir(dir_path) if  '_bufindex_0_size_'in file]
            if len(yuv_list)==4:
                print(dir,"Right dir")
            else:
                print(dir, "wrong dir")

if __name__=='__main__':
    divide(path,IMX386DUALHYBIRD_list)
    #rename(path)
    #check(path)
    
######简化版的divide.py########    
import numpy as np
from math import ceil
import os,shutil
import glob
dst_dir = "D:/test_data/"
path =  "D:/Log_20190322_1737/"
 
def create_dir(path):
    if not os.path.exists(path):
        os.makedirs(path)


if __name__ == '__main__':
    raw_files = glob.glob(path + '*')
    print(raw_files)
    raw_files.sort()
    start_cnt = 1
    cnt = start_cnt
    count = 0
    for file in raw_files:
        if(count%18==0):
            dst_path = dst_dir + '%s'%cnt+'/'
            create_dir(dst_path)
            cnt=cnt+1
        print(file)
        shutil.move(file,dst_path)
        count+=1
        
'''
    for i in range(1,3):
        dst_path = src_path+'%s'%i+'/'
        print(dst_path)
        create_dir(dst_path)
'''        
4.##############常见bug备忘录
(1.Tensorflow训练之Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.00MiB
减少batchsize的大小
在调试程序的时候碰到这个问题，显卡内存不够，分析原因主要有两个：
((1， batch_size太大，内存不够。
((2，显卡内存被别的程序占用没有退出，可以在后台查看占用线程并终止。
(2. permission refused
sudo chmod -R 777 ./

(3. 使用111服务器的pycharm调试
gpu@ubuntu:~$ cd /DATA1/dlnr_zqw
gpu@ubuntu:/DATA1/dlnr_zqw$ cd pycharm
gpu@ubuntu:/DATA1/dlnr_zqw/pycharm$ cd bin
gpu@ubuntu:/DATA1/dlnr_zqw/pycharm/bin$ sh pycharm.sh 
(4.  进入cmd之后，先打d，再打cd+路径（可以把相应文件夹直接拉过去），才可进入d盘相应文件夹
(5.  云上运行程序，直接python+把程序拉到cmd里面去。
(6.  过pipe的程序是01.local_test_3648_2736_12bit_no_lfnr.py 
(7. 安装package，先下载whl，然后pip install +**（需要安装的包的名字）+.whl
(8. 使用tensorboard，cmd中输入 tensorboard –logdir=log(log文件的目录)

5#########
